digraph "GUI"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{GUI\n|- float directional_light\l_direction\l|+  GUI()\l+ void init(std::shared\l_ptr\< Window \> main_window)\l+ void render(bool loading\l_in_progress, float progress,\l bool &shader_hot_reload_triggered)\l+ void update_user_input\l(std::shared_ptr\< Scene\l \> scene)\l+  ~GUI()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -logo_tex" ,arrowhead="odiamond"];
  Node2 [label="{Texture\n||+  Texture()\l+  Texture(const char\l *file_loc, std::shared\l_ptr\< TextureWrappingMode\l \> wrapping_mode)\l+ bool load_texture_without\l_alpha_channel()\l+ bool load_texture_with\l_alpha_channel()\l+ bool load_SRGB_texture\l_without_alpha_channel()\l+ bool load_SRGB_texture\l_with_alpha_channel()\l+ std::string get_filename\l() const\l+ GLuint get_id() const\l+ void use_texture(unsigned\l int index)\l+ void unbind_texture\l(unsigned int index)\l+ void clear_texture\l_context()\l+  ~Texture()\l}",height=0.2,width=0.4,color="black",URL="$d2/d7f/class_texture.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -textureID" ,arrowhead="odiamond"];
  Node3 [label="{GLuint\n||}",height=0.2,width=0.4,color="black",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -bit_depth\n-height\n-width" ,arrowhead="odiamond"];
  Node4 [label="{int\n||}",height=0.2,width=0.4,color="black",tooltip=" "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -wrapping_mode" ,arrowhead="odiamond"];
  Node5 [label="{shared_ptr\< TextureWrapping\lMode \>\n||}",height=0.2,width=0.4,color="black",tooltip=" "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -file_location" ,arrowhead="odiamond"];
  Node6 [label="{string\n||}",height=0.2,width=0.4,color="black",tooltip=" "];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -cascaded_shadow_intensity\n-cloud_cirrus_effect\n-cloud_density\n-cloud_mesh_offset\n-cloud_mesh_scale\n-cloud_movement_direction\n-cloud_pillowness\n-cloud_scale\n-direcional_light_radiance\n-directional_light_color\n..." ,arrowhead="odiamond"];
  Node7 [label="{float\n||}",height=0.2,width=0.4,color="black",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -cloud_num_march_steps\n-cloud_num_march_steps\l_to_light\n-cloud_speed\n-num_shadow_cascades\n-pcf_radius\n-shadow_map_res_index" ,arrowhead="odiamond"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -cloud_powder_effect\n-shadow_resolution\l_changed" ,arrowhead="odiamond"];
  Node8 [label="{bool\n||}",height=0.2,width=0.4,color="black",tooltip=" "];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -available_shadow_map\l_resolutions" ,arrowhead="odiamond"];
  Node9 [label="{const char *\n||}",height=0.2,width=0.4,color="black",tooltip=" "];
}
