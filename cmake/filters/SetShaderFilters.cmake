# setting all shader filters
# ---- SHADER FILTER  --- BEGIN

# ---- SHADER SKYBOX FILTER  --- BEGIN
set(SHADER_SKYBOX_SRC_DIR ${SHADER_SRC_DIR}skybox/)
set(SKYBOX_SHADER_FILTER ${SKYBOX_SHADER_FILTER}
    ${SHADER_SKYBOX_SRC_DIR}SkyBox.frag
    ${SHADER_SKYBOX_SRC_DIR}SkyBox.vert
)
# ---- SHADER SKYBOX FILTER  --- END

# ---- SHADER RASTERIZER FILTER  --- BEGIN
set(SHADER_RASTERIZER_SRC_DIR ${SHADER_SRC_DIR}rasterizer/)
set(RASTERIZER_SHADER_FILTER ${RASTERIZER_SHADER_FILTER}
    ${SHADER_RASTERIZER_SRC_DIR}g_buffer_geometry_pass.vert
    ${SHADER_RASTERIZER_SRC_DIR}g_buffer_geometry_pass.frag
    ${SHADER_RASTERIZER_SRC_DIR}g_buffer_lighting_pass.vert
    ${SHADER_RASTERIZER_SRC_DIR}g_buffer_lighting_pass.frag
)
# ---- SHADER RASTERIZER FILTER  --- END

# ---- SHADER PBR FILTER  --- BEGIN
set(SHADER_PBR_SRC_DIR ${SHADER_SRC_DIR}pbr/)
set(PBR_SHADER_FILTER ${PBR_SHADER_FILTER}
    ${SHADER_PBR_SRC_DIR}microfacet.glsl
)
# ---- SHADER PBR FILTER  --- END

# ---- SHADER BRDF FILTER  --- BEGIN
set(SHADER_BRDF_SRC_DIR ${SHADER_SRC_DIR}pbr/brdf/)
set(BRDF_SHADER_FILTER ${BRDF_SHADER_FILTER}
    ${SHADER_BRDF_SRC_DIR}disney.glsl
    ${SHADER_BRDF_SRC_DIR}frostbite.glsl
    ${SHADER_BRDF_SRC_DIR}pbrBook.glsl
    ${SHADER_BRDF_SRC_DIR}phong.glsl
    ${SHADER_BRDF_SRC_DIR}unreal4.glsl
)
# ---- SHADER BRDF FILTER  --- END

# ---- SHADER COMMON FILTER  --- BEGIN
set(SHADER_COMMON_SRC_DIR ${SHADER_SRC_DIR}common/)
set(COMMON_SHADER_FILTER ${COMMON_SHADER_FILTER}
    ${SHADER_COMMON_SRC_DIR}directional_light.glsl
    ${SHADER_COMMON_SRC_DIR}grad_noise.glsl
    ${SHADER_COMMON_SRC_DIR}light.glsl
    ${SHADER_COMMON_SRC_DIR}material.glsl
    ${SHADER_COMMON_SRC_DIR}Matlib.glsl
    ${SHADER_COMMON_SRC_DIR}point_light.glsl
    ${SHADER_COMMON_SRC_DIR}ShadingLibrary.glsl
    ${SHADER_COMMON_SRC_DIR}worley_noise.glsl
)
# ---- SHADER COMMON FILTER  --- END

# ---- SHADER CLOUDS FILTER  --- BEGIN
set(SHADER_CLOUDS_SRC_DIR ${SHADER_SRC_DIR}clouds/)
set(CLOUDS_SHADER_FILTER ${CLOUDS_SHADER_FILTER}
    ${SHADER_CLOUDS_SRC_DIR}clouds.glsl
    ${SHADER_CLOUDS_SRC_DIR}CloudsRectangle.vert
    ${SHADER_CLOUDS_SRC_DIR}CloudsRectangle.frag
    ${SHADER_CLOUDS_SRC_DIR}noise_texture_32_res.comp
    ${SHADER_CLOUDS_SRC_DIR}noise_texture_128_res.comp
)
# ---- SHADER CLOUDS FILTER  --- END

# ---- SHADER RASTERIZER_SHADOWS FILTER  --- BEGIN
set(SHADER_RASTERIZER_SHADOWS_SRC_DIR ${SHADER_SRC_DIR}rasterizer/shadows/)
set(RASTERIZER_SHADOWS_SHADER_FILTER ${RASTERIZER_SHADOWS_SHADER_FILTER}
    ${SHADER_RASTERIZER_SHADOWS_SRC_DIR}directional_shadow_map.vert
    ${SHADER_RASTERIZER_SHADOWS_SRC_DIR}directional_shadow_map.geom
    ${SHADER_RASTERIZER_SHADOWS_SRC_DIR}directional_shadow_map.frag
    ${SHADER_RASTERIZER_SHADOWS_SRC_DIR}omni_shadow_map.vert
    ${SHADER_RASTERIZER_SHADOWS_SRC_DIR}omni_shadow_map.geom
    ${SHADER_RASTERIZER_SHADOWS_SRC_DIR}omni_shadow_map.frag
)
# ---- SHADER RASTERIZER_SHADOWS FILTER  --- END

# ---- SHADER LOADING FILTER  --- BEGIN
set(SHADER_LOADING_SRC_DIR ${SHADER_SRC_DIR}loading_screen/)
set(LOADING_SHADER_FILTER ${LOADING_SHADER_FILTER}
    ${SHADER_LOADING_SRC_DIR}loading_screen.vert
    ${SHADER_LOADING_SRC_DIR}loading_screen.frag
)
# ---- SHADER LOADING FILTER  --- END

# ---- SHADER HOST_DEVICE FILTER  --- BEGIN
set(SHADER_HOST_DEVICE_SRC_DIR ${SHADER_SRC_DIR}hostDevice/)
set(HOST_DEVICE_SHADER_FILTER ${HOST_DEVICE_SHADER_FILTER}
    ${SHADER_HOST_DEVICE_SRC_DIR}bindings.h
    ${SHADER_HOST_DEVICE_SRC_DIR}GlobalValues.h
    ${SHADER_HOST_DEVICE_SRC_DIR}host_device_shared.h
)
# ---- SHADER HOST_DEVICE FILTER  --- END

# ---- SHADER FILTER  --- END