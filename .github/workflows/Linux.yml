name: Linux build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install OpenGL
      run: sudo apt-get install libglu1-mesa-dev freeglut3-dev mesa-common-dev
    - name: Install GLFW dependencies
      run: sudo apt-get install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
    - name: Install Code Coverage dependencies
      run: sudo apt-get install -y gcovr
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
    - name: Build Code Coverage 
      run: make coverage_xml -C ${{github.workspace}}/build/
    - name: Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./coverage_xml.xml # optional
        #flags: unittests # optional
        name: codecov-umbrella # optional
        path_to_write_report: ./coverage/codecov_report.txt
        fail_ci_if_error: false # optional (default = false)
        verbose: false # optional (default = false)
